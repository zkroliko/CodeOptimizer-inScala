# simplified python greatest common divisor
# just to show parsing
# do not expect optimizations

# gcd, recursive
def gcd(m, n):
{

res = 0+0
res = res
if m!=n:
{
    if m > n:
    {
        res = gcd(m-n, n)
    }
    else:
    {
        res = gcd(n-m, m)
    }
}
else:
{
    res = m
}

return res
}


# gcd, iterative
def gcd2(a, b):
{
    c = 0

    while a != 0 :
    {
        c = a
        a = b % a
        b = c
    }

    return b
}


def lcm(a, b):
{
    return (a * b) / gcd(a, b)
}


def a(a):
{
    while(false):
    {
        4
    }

    if 1==0 :
    {
    1**5
    }
    elif 2==0 :
    {
    2
    }
    elif 2==0 :
    {
    2
    }
    elif 2==0 :
    {
    2
    }
    else :
    {
    3
    }
}


print gcd(125,100)
print gcd2(125,100)
print lcm(125,100)
